---
// src/pages/timeline/[slug].astro

import type { GetStaticPaths, MarkdownInstance } from 'astro'
import LayoutDefault from '~/layouts/LayoutDefault.astro'
import LayoutTimeline from '~/layouts/LayoutTimeline.astro'
import SiteSeo from '~/components/SiteSeo.astro'

// 定义 frontmatter 的类型（可选）
interface TimelineFrontmatter {
  title: string
  description: string
  timeline: boolean
  slug?: string
  banner?: string
}

// 读取所有 timeline 目录下的 Markdown 文件
const allTimelinePosts = import.meta.glob('../../content/timeline/*.md', { eager: true })

// 过滤出 frontmatter 中 timeline 为 true 的文章，并显示指定类型
const timelinePosts = Object.values(allTimelinePosts).filter(
  (post) => (post as MarkdownInstance<TimelineFrontmatter>).frontmatter.timeline === true
) as MarkdownInstance<TimelineFrontmatter>[]

// 为每个条目生成静态页面路径
export const getStaticPaths: GetStaticPaths = () => {
  return timelinePosts.map((post) => {
    // 使用 frontmatter 中的 slug，如果不存在则根据 URL 生成
    const slug = post.frontmatter.slug || post.url.split('/').pop()!
    return {
      params: { slug },
      props: { post },
    }
  })
}

// 定义页面组件 props 类型
interface Props {
  post: MarkdownInstance<TimelineFrontmatter>
}

const { post } = Astro.props as Props

// 使用 post.render() 渲染 Markdown 内容
const { Content } = await post.render()
---

<LayoutDefault>
  <LayoutTimeline post={post}>
    <Content />
  </LayoutTimeline>
</LayoutDefault>